# /02-files-cloud/docker-compose.yml
#
# OwnCloud Stack: OwnCloud Server, MariaDB Database, Redis Cache
# Purpose: Provides file hosting, syncing, and sharing capabilities.
# Relies on shared 'proxy_network', internal 'cloud_default' network,
# and variables from ../.env

# version: '3.8'

services:
  owncloud:
    # Use pinned LTS version for stability (check OwnCloud docs for current recommendations)
    image: owncloud/server:latest
    container_name: owncloud_server
    restart: unless-stopped
    env_file:
      - ../.env # Load common variables (ADMIN_USERNAME, ADMIN_PASSWORD, DOMAIN, DB_PASSWORD, TZ)

    depends_on:
      owncloud_mariadb:
        condition: service_healthy
      owncloud_redis:
        condition: service_healthy

    environment:
      # --- OwnCloud Specific Settings ---
      # Values sourced from ../.env via env_file:
      - OWNCLOUD_DOMAIN=${OWNCLOUD_DOMAIN}
      - ADMIN_USERNAME=${OWNCLOUD_ADMIN_USERNAME}
      - ADMIN_PASSWORD=${OWNCLOUD_ADMIN_PASSWORD}
      - OWNCLOUD_DB_PASSWORD=${OWNCLOUD_DB_PASSWORD} # Must match MariaDB MYSQL_PASSWORD
      - TZ=${TZ:-Etc/UTC}

      # --- Required for Reverse Proxy Setup (like Caddy) ---
      - OWNCLOUD_OVERWRITEHOST=${OWNCLOUD_DOMAIN}
      - OWNCLOUD_OVERWRITEPROTOCOL=https
      - OWNCLOUD_OVERWRITEWEBROOT=/
      # Trust requests coming from the Docker proxy network (adjust subnet if yours differs)
      - OWNCLOUD_OVERWRITECONDADDR=^172\.([1-3][0-9]|4[0-4])\.0\..*$
      # Trust requests forwarded by the Caddy container on the proxy network
      - OWNCLOUD_TRUSTED_PROXIES=caddy # Assuming Caddy container name is 'caddy'

      # --- Database Connection Details ---
      - OWNCLOUD_DB_TYPE=mysql
      - OWNCLOUD_DB_HOST=owncloud_mariadb # Service name of the DB container
      - OWNCLOUD_DB_NAME=owncloud        # Should match MYSQL_DATABASE in mariadb service
      - OWNCLOUD_DB_USERNAME=owncloud    # Should match MYSQL_USER in mariadb service

      # --- Redis Connection Details ---
      - OWNCLOUD_REDIS_ENABLED=true
      - OWNCLOUD_REDIS_HOST=owncloud_redis # Service name of the Redis container

      # --- Other Settings ---
      - OWNCLOUD_MYSQL_UTF8MB4=true

    volumes:
      # Volume for user files and application data
      - owncloud_files:/mnt/data

    networks:
      # Internal network for DB/Redis communication
      - cloud_default
      # Shared external network for Caddy reverse proxy access
      - proxy_network

    ports:
      # Expose internal port for Caddy access
      - "8080"

    # Optional: Add OwnCloud's own healthcheck if desired
    # healthcheck:
    #  test: ["CMD", "/usr/bin/healthcheck"]
    #  interval: 30s
    #  timeout: 10s
    #  retries: 5

  owncloud_mariadb:
    # Use pinned version matching OwnCloud requirements
    image: mariadb:10.11 # Check OwnCloud docs for recommended version
    container_name: owncloud_mariadb
    restart: unless-stopped
    env_file:
      - ../.env # Load root password, user password, TZ
    environment:
      # Values sourced from ../.env via env_file:
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${OWNCLOUD_DB_PASSWORD} # Must match OwnCloud DB password
      - TZ=${TZ:-Etc/UTC}
      # --- Database Setup ---
      - MYSQL_USER=owncloud        # User OwnCloud will connect as
      - MYSQL_DATABASE=owncloud    # Database OwnCloud will use
      - MARIADB_AUTO_UPGRADE=1     # Attempt minor upgrades on startup

    command: ["--max-allowed-packet=128M", "--innodb-log-file-size=64M"]

    volumes:
      # Volume for database persistence
      - owncloud_mysql_data:/var/lib/mysql

    networks:
      # Only connect to the internal network
      - cloud_default

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u", "root", "--password=${MARIADB_ROOT_PASSWORD}"]
      interval: 15s
      timeout: 5s
      retries: 5

  owncloud_redis:
    # Use pinned version compatible with OwnCloud
    image: redis:6 # Check OwnCloud docs for recommended version
    container_name: owncloud_redis
    restart: unless-stopped
    env_file:
      - ../.env # Load TZ
    environment:
      - TZ=${TZ:-Etc/UTC}

    command: ["--databases", "1"] # Standard command for Redis

    volumes:
      # Volume for Redis data persistence (optional but good practice)
      - owncloud_redis_data:/data

    networks:
      # Only connect to the internal network
      - cloud_default

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 5s
      retries: 3

# Define the named volumes used by services in this file
volumes:
  owncloud_files:
    driver: local
  owncloud_mysql_data:
    driver: local
  owncloud_redis_data:
    driver: local

# Define the networks used by services in this file
networks:
  cloud_default: # Internal network specific to this cloud stack
    driver: bridge
  proxy_network: # Shared network for Caddy access
    external: true
    name: proxy_network
