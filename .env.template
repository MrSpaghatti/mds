# .env.template - Environment Variables for Self-Hosted Docker Stacks
#
# INSTRUCTIONS:
# 1. Copy this file to '.env' in the same directory: cp .env.template .env
# 2. Edit the '.env' file with YOUR specific settings.
# 3. DO NOT commit your actual '.env' file to Git. Add '.env' to your .gitignore!
# 4. Generate strong, unique passwords for all credentials.
#

# === General Settings ===
# Applicable to multiple containers for consistent timekeeping.
# Find your timezone from https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
TZ=Etc/UTC

# Default User/Group IDs for services running as non-root (e.g., linuxserver.io images).
# Find yours on Linux/macOS using: id -u  and  id -g
# Common default is 1000. Adjust if necessary for permissions on bind mounts.
DEFAULT_PUID=1000
DEFAULT_PGID=1000


# === Reverse Proxy (Caddy) ===
# Email address for Let's Encrypt registration and notifications.
ACME_EMAIL=your-email@example.com

# Cloudflare API Token *specifically for Caddy ACME DNS Challenge*.
# Required ONLY if using Caddy with the Cloudflare DNS plugin image AND the acme_dns directive.
# Needs permissions like Zone:Read, DNS:Edit for the relevant zone(s).
# Scope this token tightly to what Caddy needs.
CLOUDFLARE_API_TOKEN=YOUR_CADDY_ACME_CLOUDFLARE_API_TOKEN


# === Dynamic DNS (ddclient for Cloudflare) ===
# PUID/PGID for the ddclient process (can often use DEFAULT_PUID/PGID).
DDCLIENT_PUID=${DEFAULT_PUID}
DDCLIENT_PGID=${DEFAULT_PGID}

# Your Cloudflare account login email address.
DDCLIENT_CLOUDFLARE_EMAIL=your-cloudflare-login-email@example.com

# Your Cloudflare API Token *specifically for ddclient DNS updates*.
# CRITICAL: Needs Zone:DNS:Edit permissions for the zone defined below.
# This *can* be the same token as Caddy's if permissions overlap, but separate tokens are often better practice.
DDCLIENT_CLOUDFLARE_API_TOKEN=YOUR_DDCLIENT_DNS_EDIT_CLOUDFLARE_API_TOKEN

# The Cloudflare Zone name (your root domain, e.g., example.com) that ddclient should manage.
DDCLIENT_CLOUDFLARE_ZONE=yourdomain.com

# Comma-separated list of DNS records within the zone to update with your dynamic IP.
# Use '@' for the root domain. Include ALL hostnames managed by Caddy.
# Example: "@,www,cloud,sync,portainer,ai"
DDCLIENT_CLOUDFLARE_RECORDS=

# === Homarr Dashboard ===
# The external domain name Homarr will be accessed through (managed by caddy)
HOMARR_DOMAIN=homarr.yourdomain.com

# openssl rand -hex 32
# homarr encryption key
HOMARR_KEY=

# === File Hosting (OwnCloud) ===
# The external domain name OwnCloud will be accessed through (managed by Caddy).
OWNCLOUD_DOMAIN=cloud.yourdomain.com

# Admin user credentials for OwnCloud web UI login. Use strong passwords!
OWNCLOUD_ADMIN_USERNAME=admin
OWNCLOUD_ADMIN_PASSWORD=changeme_secure_owncloud_admin_password

# Database credentials used by OwnCloud to connect to MariaDB.
# Must match the MariaDB settings below. Use a strong password!
OWNCLOUD_DB_PASSWORD=changeme_secure_owncloud_db_password

# MariaDB root user password (for DB management/healthchecks). Use a strong password!
MARIADB_ROOT_PASSWORD=changeme_secure_mariadb_root_password
MYSQL_PASSWORD=${OWNCLOUD_DB_PASSWORD}

# === File Sync (SyncThing) ===
# PUID/PGID for the Syncthing process.
# CRITICAL: Must match the user/group ID that owns the host directories
# bind-mounted into the Syncthing container (e.g., ./syncthing_config, ./syncthing_data).
SYNCTHING_PUID=${DEFAULT_PUID}
SYNCTHING_PGID=${DEFAULT_PGID}


# === AI Tools (Ollama) ===
# (Optional) Controls how long Ollama keeps models loaded in RAM after last use.
# Format: Number followed by unit (s, m, h). Examples: 1h, 30m, 0 (unload immediately).
OLLAMA_KEEP_ALIVE=24h

# === Notes (Trilium) ===
# The external domain name Trilium Notes will be accessed through (managed by Caddy).
TRILIUM_NOTES_DOMAIN=notes.yourdomain.com

# (Optional) Host path for Trilium Notes data.
# If not set, the 06-notes/docker-compose.yml defaults to './data' within the 06-notes/ directory.
# Example: TRILIUM_NOTES_DATA_DIR=/mnt/docker_data/trilium_notes
# TRILIUM_NOTES_DATA_DIR=


# === Other / Future Services ===
# Add variables for other services as needed.
